{"version":3,"sources":["_Todo/todoheader.jsx","_Todo/calendar.jsx","_Todo/todoitem.jsx","_Todo/todolist.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoHeader","props","className","type","this","title","editMode","delMode","onClick","createTodo","id","react","Component","Calendar","selectedDay","month","thisweek","map","data","bot","setSelectedDay","top","n","TodoItem","state","content","toggleComplete","bind","handleFormSubmit","onContentChange","onTypeChange","onDelClick","onEditClick","doEditTodo","cancelEditTodo","todo","setState","setList","todolist","item","isCompleted","e","target","value","filter","setError","formMode","preventDefault","addMode","setMode","day","time","colorBg","onChange","name","style","backgroundColor","onSubmit","placeholder","TodoList","list","error","disableMode","now","Date","today","getDate","i","first","getDay","dayinweek","setDate","toString","slice","arr","split","length","push","isChange","forEach","newTodo","getDayFormat","getTime","getRandomBgColor","prevState","getMonth","getFullYear","hours","getHours","minutes","getMinutes","from","to","r","Math","round","random","g","b","mode","toLowerCase","trim","alert","message","setTimeout","day_format","App","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe6838cb.chunk.js","sourcesContent":["import react from \"react\";\r\n\r\nexport class TodoHeader extends react.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"row\">\r\n        {/* Left : Back button */}\r\n        <div className=\"left-header col-1 d-flex justify-content-center align-items-center\">\r\n          <button type=\"button\" className=\"btn bg-transparent back-button\">\r\n            <i className=\"fas fa-chevron-left\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Middle : Title */}\r\n        <div className=\"title col-10 d-flex justify-content-center align-self-center font-weight-bold\">\r\n          {this.props.title}\r\n        </div>\r\n\r\n        {/* Right : Add Todos button */}\r\n        <div className=\"right-header col-1 d-flex justify-content-center align-items-center \">\r\n          <button\r\n            type=\"button\"\r\n            className={\"btn bg-transparent add-button \"+((this.props.editMode || this.props.delMode)? \"d-none\": \"\")}\r\n            onClick={() => this.props.createTodo()}\r\n            id=\"addTodo\"\r\n          >\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import react from \"react\";\r\n\r\nexport class Calendar extends react.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <aside className=\"row\">\r\n        <div className=\"calendar-items mon\">{this.props.selectedDay.month}</div>\r\n        {this.props.thisweek.map((data) => (\r\n          <div\r\n            key={data.id}\r\n            className={\r\n              \"calendar-items\" +\r\n              (+data.bot === +this.props.selectedDay.bot ? \" active\" : \"\")\r\n            }\r\n            onClick={() => this.props.setSelectedDay(data)}\r\n          >\r\n            <div className=\"top\">{data.top}</div>\r\n            <div className=\"bot\">{data.bot}</div>\r\n            {data.n > 0 ? ( data.n > 10 ? <div className=\"list-len\">10+</div> :<div className=\"list-len\">{data.n}</div> ) : \"\"}\r\n          </div>\r\n        ))}\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n","import react from \"react\";\r\n\r\nexport class TodoItem extends react.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content : '',\r\n      type    : '',\r\n    }\r\n    this.toggleComplete = this.toggleComplete.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.onContentChange = this.onContentChange.bind(this);\r\n    this.onTypeChange = this.onTypeChange.bind(this);\r\n    this.onDelClick = this.onDelClick.bind(this);\r\n    this.onEditClick = this.onEditClick.bind(this);\r\n    this.doEditTodo = this.doEditTodo.bind(this);\r\n    this.cancelEditTodo = this.cancelEditTodo.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    let {content, type} = {...this.props.todo}\r\n    if(content){\r\n      this.setState({content: content})\r\n    }\r\n    if(type){\r\n      this.setState({type: type})\r\n    }\r\n  }\r\n\r\n  toggleComplete() {\r\n    this.props.setList(\r\n      this.props.todolist.map((item) =>\r\n        item.id === this.props.todo.id\r\n          ? { ...item, isCompleted: !item.isCompleted }\r\n          : { ...item }\r\n      )\r\n    );\r\n  }\r\n\r\n  onContentChange(e){\r\n    this.setState({content : e.target.value})\r\n  }\r\n\r\n  onTypeChange(e){\r\n    this.setState({type : e.target.value})\r\n  }\r\n\r\n  onDelClick(){\r\n    this.props.setList(\r\n      this.props.todolist.filter( item =>\r\n        (item.id !== this.props.todo.id )\r\n      )\r\n    );\r\n  }\r\n\r\n  onEditClick(){\r\n    if( !this.props.todo.isCompleted )\r\n      this.props.setList(\r\n        this.props.todolist.map( item =>\r\n          (item.id === this.props.todo.id )\r\n          ? {...item, formMode: true} : {...item}\r\n        )\r\n      );\r\n    else\r\n      this.props.setError('Can\\'t edit Todo when completed')\r\n  }\r\n\r\n  handleFormSubmit(e){\r\n    e.preventDefault();\r\n    // 1 Todo is \r\n    // -  Key        |      Value                 | Check\r\n      //* id         : \"12 February 2021 08:30\",  |  yes\r\n      //* day        : \"12 February 2021\",        |  yes\r\n      //* time       : \"08:30\",                   |  yes\r\n      //! content    : \"Visit relative houses\",   |  no\r\n      //! type       : \"Routine\",                 |  no\r\n      //* isCompleted: false,                     |  yes\r\n      //* formMode   : true,                      |  yes\r\n      //* colorBg    : \"#333212\",                 |  yes\r\n  }\r\n  \r\n  doEditTodo(){\r\n    this.props.setList(\r\n      this.props.todolist.map( (item) => (\r\n        ( item.id === this.props.todo.id) ? \r\n        {...item, content: this.state.content ? this.state.content : 'No content' , type: this.state.type ? this.state.type : 'No type', formMode: false}\r\n        :{...item}\r\n      ))\r\n    )\r\n    if(this.props.addMode) this.props.setMode('add',false);\r\n  }\r\n\r\n  cancelEditTodo(){\r\n    if(this.props.addMode){\r\n      this.onDelClick();\r\n      this.props.setMode('add',false);\r\n    }else{\r\n      this.props.setList(\r\n        this.props.todolist.map( (item) => (\r\n          ( item.id === this.props.todo.id) ? \r\n          {...item, formMode: false}\r\n          :{...item}\r\n        ))\r\n      )\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      id,\r\n      day,\r\n      time,\r\n      content,\r\n      type,\r\n      isCompleted,\r\n      formMode,\r\n      colorBg,\r\n    } = this.props.todo;\r\n    return (\r\n      <div id={id} className={\"todo-items row mt-3 \"+( (formMode) ? \"created\":\"\" ) + ( (isCompleted) ? \"completed\":\"\")}>\r\n        <div className=\"ischecked col-1\">\r\n          <input\r\n            onChange={this.toggleComplete}\r\n            type=\"checkbox\"\r\n            name=\"complete\"\r\n            value={isCompleted}\r\n            className={ ((formMode) ? \"d-none\" : \"\") }\r\n          />\r\n          <span className=\"checkmark\" day={day}>\r\n            <i className=\"fas fa-check\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"time text-secondary col-2 mx-2 d-flex align-self-center\">\r\n          {time}\r\n        </div>\r\n\r\n        <div\r\n          className=\"text-box ml-2 text-light \"\r\n          style={{ backgroundColor: `${colorBg}` }}\r\n        >\r\n          <div className={\"text \"+ ( (formMode) ? \"d-none\":\"\" ) }>\r\n            <div className=\"content\">{content}</div>\r\n            <div className=\"type\">{type}</div>\r\n          </div>\r\n          {/* Form to Edit */}\r\n          <form className={\"editTodo \"+( (formMode) ? \"\": \"d-none\")}\r\n                onSubmit={(e) => this.handleFormSubmit(e)}>\r\n            <div className=\"content\">\r\n              <input type=\"text\" name=\"content\" value={this.state.content} placeholder=\"Content\" onChange={(e) => this.onContentChange(e)}/>\r\n            </div>\r\n            <div className=\"type\">\r\n              <input type=\"text\" name=\"type\" value={this.state.type} placeholder=\"Type\" onChange={(e)=> this.onTypeChange(e)}/>\r\n              <button\r\n                onClick={this.doEditTodo}\r\n                className=\"btn bg-success text-white\"\r\n              >\r\n                <i className=\"fas fa-check\"></i>\r\n              </button>\r\n              <button\r\n                onClick={this.cancelEditTodo}\r\n                className=\"btn bg-danger text-white\"\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <button\r\n            className={\"btn btn-editTodo \" + ((this.props.editMode && !formMode)? \"\": \"d-none\")}\r\n            onClick={this.onEditClick}\r\n          >\r\n            <i className=\"fas fa-pen\"></i>\r\n          </button>\r\n          <button\r\n            className={\"btn btn-delTodo \" + ((this.props.delMode )? \"\": \"d-none\")}\r\n            onClick={this.onDelClick}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import react from \"react\";\r\nimport { TodoItem } from \"./todoitem\";\r\nimport { Calendar } from \"./calendar\";\r\nimport { TodoHeader } from \"./todoheader\";\r\n\r\nexport class TodoList extends react.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // change \r\n      /*\r\n        list: [\r\n          { day: \"14 February 2021\",\r\n            todos: [\r\n              {\r\n                id         : \"14 February 2021 08:30\",\r\n                time       : \"08:30\",\r\n                content    : \"Visit relative houses\",\r\n                type       : \"Routine\",\r\n                isCompleted: false,\r\n                formMode   : false,\r\n                colorBg    : \"#333212\",\r\n              },\r\n          ]},\r\n        ]\r\n      */\r\n        //- Pros\r\n        /* + 'day' don't reapeat, compare with other at least 1 time to\r\n        access to todos.\r\n           + 'day' becomes the large id for all todos in that day\r\n           + Easy to get todos length of that day */\r\n        //- Cond\r\n        /* */\r\n      list: [\r\n        {\r\n          id         : \"14 February 2021 08:30\",\r\n          day        : \"14 February 2021\",\r\n          time       : \"08:30\",\r\n          content    : \"Visit relative houses\",\r\n          type       : \"Routine\",\r\n          isCompleted: false,\r\n          formMode   : false,\r\n          colorBg    : \"#333212\",\r\n        },\r\n      ],\r\n      selectedDay : \"\",\r\n      thisweek    : [],\r\n      editMode    : false,\r\n      delMode     : false,\r\n      addMode     : false,\r\n      error       : \"\",\r\n    };\r\n    \r\n    this.setMode = this.setMode.bind(this);\r\n    this.disableMode = this.disableMode.bind(this);\r\n    this.setError = this.setError.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init month and week due to Selected day here\r\n    let now = new Date();\r\n    let thisweek = [];\r\n    let today = now.getDate(); // for checking is active or not\r\n    \r\n    for (let i = 0; i <= 6; i++) {\r\n      let first = now.getDate() - now.getDay() + i;\r\n      let dayinweek = new Date(now.setDate(first)).toString().slice(0, 15);\r\n      let arr = dayinweek.split(\" \");\r\n      let day = {\r\n        id: dayinweek,\r\n        top:   arr[0], // Thu\r\n        bot:   arr[2], // 11\r\n        month: arr[1],\r\n        // update number of todos \r\n        n: this.state.list.filter( (item) => \r\n        (new Date(item.day).toString() === new Date(dayinweek).toString())\r\n        ).length\r\n      };\r\n      if (+day.bot === +today) {\r\n        this.setState({ selectedDay: day });\r\n      }\r\n      thisweek.push(day);\r\n    }\r\n    this.setState({ thisweek: thisweek });\r\n  }\r\n  componentDidUpdate(){\r\n    const thisweek = this.state.thisweek;\r\n    // for each day in thisweek\r\n    // is todos of that day increased\r\n    let isChange = false;\r\n    thisweek.forEach( day => {\r\n      let n = this.state.list.filter( (item) => \r\n        (new Date(item.day).toString() === new Date(day.id).toString()) ).length\r\n      if( day.n !== n ){\r\n        isChange = true;\r\n        day.n = n;\r\n      }\r\n    })\r\n    if(isChange) this.setState({thisweek: thisweek})\r\n    // console.log(this.state.delMode)\r\n  }\r\n\r\n  createTodo(){\r\n    if(this.state.addMode || this.state.list.filter( item => item.formMode ).length){\r\n      this.setError('Can\\'t create more because existed one still creating ')\r\n      return; \r\n    }\r\n    let selectedDay = new Date(new Date().setDate(this.state.selectedDay.bot)); // selectedDay = \"Fri Feb 12 2021 ....\"\r\n    const newTodo = \r\n      {\r\n        id         : '', // getDayTimeFormat func\r\n        day        : this.getDayFormat( selectedDay ), // getDayFormat func\r\n        time       : this.getTime( selectedDay ), \r\n        content    : \"\",\r\n        type       : \"\",\r\n        isCompleted: false,\r\n        formMode   : true,\r\n        colorBg    : this.getRandomBgColor(50,200),\r\n      }\r\n    newTodo.id = newTodo.day + newTodo.time + newTodo.colorBg;\r\n    this.setState( {addMode: true});\r\n    this.setState( prevState => ( {list: [...prevState.list ,newTodo]} ))\r\n  }\r\n\r\n  getDayFormat( selectedDay ){\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];  \r\n      return selectedDay.getDate() + // 12\r\n      \" \" +\r\n      months[selectedDay.getMonth()] + // February\r\n      \" \" +\r\n      new Date().getFullYear(); // 2021\r\n      // day_format = \"12 February 2021\"\r\n  }\r\n\r\n  getDay( selectedDay ){\r\n    const days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Webnesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n    return days[selectedDay.getDay() - 1 === -1 ? 6 : selectedDay.getDay() - 1]; // Fri : 6\r\n  }\r\n\r\n  getTime( selectedDay ){\r\n    var hours  = selectedDay.getHours();\r\n        hours  = (+hours - 10 >= 0) ? hours : \"0\"+hours;\r\n    var minutes = selectedDay.getMinutes();\r\n        minutes = (+minutes - 10 >= 0) ? minutes : \"0\"+minutes;\r\n    return hours + \":\" + minutes;\r\n  }\r\n\r\n  getRandomBgColor(from, to) {\r\n    var r = Math.round(Math.random() * (to - from + 1) + from),\r\n        g = Math.round(Math.random() * (to - from + 1) + from),\r\n        b = Math.round(Math.random() * (to - from + 1) + from);\r\n    return `rgb(${r},${g},${b})`;\r\n  }\r\n\r\n  setMode( mode, data){\r\n    switch(mode.toString().toLowerCase().trim()){\r\n      case 'add' : case 'a':\r\n        this.setState({addMode : data})\r\n        break;\r\n      case 'edit': case 'e':\r\n        this.setState({editMode : data})\r\n        break;\r\n      case 'delete': case 'd': case 'del':\r\n        this.setState({delMode : data})\r\n        break;\r\n      default:\r\n        alert(\"This mode didn't exist in setMode() \");\r\n        break;\r\n    }\r\n  }\r\n\r\n  setError( message ){\r\n    this.setState({error: message});\r\n    setTimeout(function(){\r\n      this.setState({error: ''})\r\n    }.bind(this),1500)\r\n  }\r\n\r\n  disableMode(){\r\n    if(this.state.list.length === 0) {\r\n      this.setState({addMode: false, editMode: false, delMode: false})\r\n      return;\r\n    }\r\n    const isFormModeon = this.state.list.filter( item => item.formMode ).length;\r\n    if(isFormModeon)\r\n    {\r\n      this.setError('Can\\'t disable EditMode because it existed one being edited');\r\n      return;\r\n    }\r\n    this.setState({addMode: false, editMode: false, delMode: false})\r\n  }\r\n\r\n  render() {\r\n    // - Datetime ----------- //\r\n    let selectedDay = new Date(new Date().setDate(this.state.selectedDay.bot)); // selectedDay = \"Fri Feb 12 2021 ....\"\r\n    let day = this.getDay(selectedDay);  \r\n    let day_format = this.getDayFormat( selectedDay );\r\n    // ----------------------  //\r\n    return (\r\n      <div className=\"container h-100 d-flex flex-column align-items-center\">\r\n        {/* Header ( Nav ) include :\r\n          - Back button\r\n          - Title \r\n          - Add button\r\n      */}\r\n        <TodoHeader title=\"Schedule\" \r\n            editMode={this.state.editMode}\r\n            delMode ={this.state.delMode}\r\n            createTodo={this.createTodo.bind(this)}/>\r\n        {/* Aside ( Calendar ) include :\r\n          - The first cell in row : Month\r\n          - 7 cells stand for 7 days in that week.  \r\n      */}\r\n        <Calendar\r\n          selectedDay={this.state.selectedDay}\r\n          setSelectedDay={(day) => this.setState({ selectedDay: day })}\r\n          thisweek={this.state.thisweek}\r\n          todolist={this.state.list}\r\n          getDayFormat={this.getDayFormat}\r\n        />\r\n        {/* Main ( To do list ) include : \r\n          - Date : full except hour, min, sec \r\n          - Todo list :\r\n              + Todo items : isChecked ; hh:mm ; Thing \r\n                  !: Thing has random color for type \r\n      */}\r\n        <main className=\"\">\r\n          {/* <!-- - Datetime header : later add time JS function --> */}\r\n          <div className=\"datetime today row\">\r\n            <div className=\"date h5 col-3 font-weight-500\">{day}</div>\r\n            <div className=\"day col-5 font-weight-500\">{day_format}</div>\r\n            <div className=\"col-3 d-flex\">\r\n              {/* Enable EditTodo button */}\r\n              <button\r\n                className={\"btn p-0 mx-1 btn-warning \" + ((this.state.delMode || this.state.addMode? \"d-none\" : \"\"))}\r\n                id=\"btn-editTodo\"\r\n                onClick={ () => this.setState({ editMode: true })}\r\n              >\r\n                <i className=\"fas fa-edit\"></i>\r\n              </button>\r\n\r\n              {/* Enable DelTodo button */}\r\n              <button\r\n                className={\"btn p-0 mx-1 btn-danger \" + ((this.state.editMode || this.state.addMode? \"d-none\" : \"\"))}\r\n                id=\"btn-delTodo\"\r\n                onClick={ () => this.setState({ delMode: true })}\r\n              >\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n              </button>\r\n\r\n              {/* Disable Cancel button */}\r\n              <button\r\n                className={\"btn p-0 px-1 text-danger bg-transparent font-weight-500 \"+\r\n                           (this.state.editMode || this.state.delMode ? \"\": \"d-none\")}\r\n                id=\"btn-cancel\"\r\n                onClick={this.disableMode}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <!-- ------------------- --> */}\r\n\r\n          {/* <!-- Error --> */}\r\n          { this.state.error ? \r\n          (<div className=\"error\">{this.state.error}</div>) \r\n          : \"\" }\r\n          \r\n          {/* <!-- ----- --> */}\r\n\r\n          {/* <!-- Todo list --> */}\r\n          <div className=\"todo-list\">\r\n            {this.state.list.map((todo) =>\r\n              todo.day === day_format ? (\r\n                <TodoItem\r\n                  key     ={todo.id}\r\n                  todo    ={todo}\r\n                  todolist={this.state.list}\r\n                  addMode ={this.state.addMode}\r\n                  editMode={this.state.editMode}\r\n                  delMode ={this.state.delMode}\r\n                  setList ={(list) => this.setState({ list: [...list] })}\r\n                  setMode ={this.setMode}\r\n                  setError={this.setError}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            )}\r\n          </div>\r\n          {/* <!-- ------------  --> */}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport {TodoList} from './_Todo/index'\nexport class App extends React.Component{\n\n    render(){\n        return (     \n            <TodoList />\n        );\n    }\n        \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*_Login_v2: Try my best  */\n// import './_Login_v2/App.scss'\n// import imgpath from './_Login_v2/img/background3.jpg'\n// import {Login, Register} from \"./_Login_v2/index\" \n\n// const LeftSide = props => {\n//     return(\n//         <div className=\"leftside\">\n//             <div className=\"Imgbox\">\n//                 <img src={props.imgsrc} alt={props.imgalt}/>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export class App extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             username : \"\",\n//             password : \"\",\n//             savingPassword: false,\n//             isLogin  : true,\n//         }\n//         this.currentRef = \"Login\";\n//         this.changeisLogin = this.changeisLogin.bind(this)\n//     }\n//     changeisLogin(e){\n//         e.preventDefault()\n//         this.setState( prevState => ({isLogin : !prevState.isLogin}))\n//     }\n//     render(){\n//         console.log( \"IsLogin : \",this.state.isLogin)\n//         const imgsrc = imgpath\n//         const imgalt = \"HeroImage\"\n//         console.log(\"Saving Password: \",this.state.savingPassword)\n//         return(\n//           <div className=\"App\">\n//               <LeftSide imgsrc={imgsrc} imgalt={imgalt}/>\n//               { this.state.isLogin ? \n//                 <Login \n//                     username={this.state.username}\n//                     password={this.state.password}\n//                     savingPassword={this.state.savingPassword}\n//                     setUsername={(text) => {this.setState({username : text}); console.log(\"Username: \",this.state.username)}}\n//                     setPassword={(text) => {this.setState({password : text}); console.log(\"Password: \",this.state.password)}}\n//                     toggleSavingPassword={() => {this.setState(state => ({savingPassword : !state.savingPassword}) );}}\n//                     toggleSignup={this.changeisLogin} \n//                     containerRef={(ref) => {this.currentRef = ref}}/> \n//                     : \n//                 <Register containerRef={(ref) => {this.currentRef = ref}} toggleSignup={this.changeisLogin} />}\n//           </div>\n          \n//         )\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n/* _Login : Example from Youtube */\n//import './_Login/App.scss'\n// import {Login, Register} from \"./_Login/index\"\n\n// const RightSide = props =>{\n//   return <div className=\"right-side\" ref={props.containerRef} onClick={props.onClick}>\n//     <div className=\"inner-container\">\n//       <div className=\"text\">{props.current}</div>\n//     </div>\n//   </div>\n// }\n\n// export class App extends React.Component{\n//     constructor(props){\n//       super(props);\n//       this.state = {\n//         isLogginActive: true\n//       }\n//     }\n//     componentDidMount() {\n//       //Add .right by default\n//       this.rightSide.classList.add(\"right\");\n//     }\n//     changeState(){\n//       const { isLogginActive } = this.state;\n//       if( isLogginActive ){\n//         this.rightSide.classList.remove(\"right\")\n//         this.rightSide.classList.add(\"left\")\n//       } else {\n//         this.rightSide.classList.remove(\"left\")\n//         this.rightSide.classList.add(\"right\")\n//       }\n\n//       this.setState((prevState) => ({isLogginActive: !prevState.isLogginActive}))\n//     }\n\n//     render(){\n//       const { isLogginActive } = this.state\n//       const current = isLogginActive ? \"Register\" : \"Login\"\n//       const currentActive = isLogginActive ? \"login\" : \"register\"\n//       return (\n//         <div className=\"App\">\n//           <div className=\"login\">\n//             <div className=\"container\">\n//                {isLogginActive && <Login containerRef={(ref) =>{this.current = ref;  }} />}\n//                {!isLogginActive && <Register containerRef={(ref) => {this.current = ref; }}/>}\n//             </div>\n//             <RightSide current={current} currentActive={currentActive} containerRef = {ref => (this.rightSide = ref)} onClick={this.changeState.bind(this)}/>\n//           </div>\n//         </div>\n//       )\n//     }\n// };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}